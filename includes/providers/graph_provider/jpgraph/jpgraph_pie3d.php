<?php
 class PiePlot3D extends PiePlot { var $labelhintcolor="red",$showlabelhint=true; var $angle=50; var $edgecolor="", $edgeweight=1; var $iThickness=false; function PiePlot3d(&$data) { $this->radius = 0.5; $this->data = $data; $this->title = new Text(""); $this->title->SetFont(FF_FONT1,FS_BOLD); $this->value = new DisplayValue(); $this->value->Show(); $this->value->SetFormat('%.0f%%'); } function SetLegends($aLegend) { $this->legends = array_reverse(array_slice($aLegend,0,count($this->data))); } function SetSliceColors($aColors) { $this->setslicecolors = $aColors; } function Legend(&$aGraph) { parent::Legend($aGraph); $aGraph->legend->txtcol = array_reverse($aGraph->legend->txtcol); } function SetCSIMTargets($targets,$alts=null) { $this->csimtargets = $targets; $this->csimalts = $alts; } function SetEdge($aColor='black',$aWeight=1) { $this->edgecolor = $aColor; $this->edgeweight = $aWeight; } function ShowBorder($exterior=true,$interior=true) { JpGraphError::RaiseL(14001); } function SetAngle($a) { if( $a<5 || $a>90 ) JpGraphError::RaiseL(14002); else $this->angle = $a; } function AddSliceToCSIM($i,$xc,$yc,$height,$width,$thick,$sa,$ea) { $sa *= M_PI/180; $ea *= M_PI/180; $coords = "$xc, $yc"; $xp = floor($width*cos($sa)/2+$xc); $yp = floor($yc-$height*sin($sa)/2); $coords.= ", $xp, $yp"; if ($sa >= M_PI && $sa <= 2*M_PI*1.01) { $yp = floor($yp+$thick); $coords.= ", $xp, $yp"; } $a=$sa+0.2; while ($a<$ea) { $xp = floor($width*cos($a)/2+$xc); if ($a >= M_PI && $a <= 2*M_PI*1.01) { $yp = floor($yc-($height*sin($a)/2)+$thick); } else { $yp = floor($yc-$height*sin($a)/2); } $coords.= ", $xp, $yp"; $a += 0.2; } $xp = floor($width*cos($ea)/2+$xc); $yp = floor($yc-$height*sin($ea)/2); if ($ea >= M_PI && $ea <= 2*M_PI*1.01) { $coords.= ", $xp, ".floor($yp+$thick); } $coords.= ", $xp, $yp"; $alt=''; if( !empty($this->csimalts[$i]) ) { $tmp=sprintf($this->csimalts[$i],$this->data[$i]); $alt="alt=\"$tmp\" title=\"$tmp\""; } if( !empty($this->csimtargets[$i]) ) $this->csimareas .= "<area shape=\"poly\" coords=\"$coords\" href=\"".$this->csimtargets[$i]."\" $alt />\n"; } function SetLabels($aLabels,$aLblPosAdj="auto") { $this->labels = $aLabels; $this->ilabelposadj=$aLblPosAdj; } function SetLabelMargin($m) { $this->value->SetMargin($m); } function ShowLabelHint($f=true) { $this->showlabelhint=$f; } function SetLabelHintColor($c) { $this->labelhintcolor=$c; } function SetHeight($aHeight) { $this->iThickness = $aHeight; } function NormAngle($a) { if( $a > 0 ) { while($a > 360) $a -= 360; } else { while($a < 0) $a += 360; } if( $a < 0 ) $a = 360 + $a; if( $a == 360 ) $a=0; return $a; } function Pie3DSlice(&$img,$xc,$yc,$w,$h,$sa,$ea,$z,$fillcolor,$shadow=0.65) { if( ($sa < 90 && $ea > 90) || ( ($sa > 90 && $sa < 270) && $ea > 270) ) { JpGraphError::RaiseL(14003); exit(1); } $p[] = array(); $rsa = $sa/180*M_PI; $rea = $ea/180*M_PI; $sinsa = sin($rsa); $cossa = cos($rsa); $sinea = sin($rea); $cosea = cos($rea); $step = 0.05; if( $sa >= 270 ) { if( $ea > 360 || ($ea > 0 && $ea <= 90) ) { if( $ea > 0 && $ea <= 90 ) { $rea += 2*M_PI; } $p = array($xc,$yc,$xc,$yc+$z, $xc+$w*$cossa,$z+$yc-$h*$sinsa); $pt = array($xc,$yc,$xc+$w*$cossa,$yc-$h*$sinsa); for( $a=$rsa; $a < 2*M_PI; $a += $step ) { $tca = cos($a); $tsa = sin($a); $p[] = $xc+$w*$tca; $p[] = $z+$yc-$h*$tsa; $pt[] = $xc+$w*$tca; $pt[] = $yc-$h*$tsa; } $pt[] = $xc+$w; $pt[] = $yc; $p[] = $xc+$w; $p[] = $z+$yc; $p[] = $xc+$w; $p[] = $yc; $p[] = $xc; $p[] = $yc; for( $a=2*M_PI+$step; $a < $rea; $a += $step ) { $pt[] = $xc + $w*cos($a); $pt[] = $yc - $h*sin($a); } $pt[] = $xc+$w*$cosea; $pt[] = $yc-$h*$sinea; $pt[] = $xc; $pt[] = $yc; } else { $p = array($xc,$yc,$xc,$yc+$z, $xc+$w*$cossa,$z+$yc-$h*$sinsa); $pt = array($xc,$yc,$xc+$w*$cossa,$yc-$h*$sinsa); $rea = $rea == 0.0 ? 2*M_PI : $rea; for( $a=$rsa; $a < $rea; $a += $step ) { $tca = cos($a); $tsa = sin($a); $p[] = $xc+$w*$tca; $p[] = $z+$yc-$h*$tsa; $pt[] = $xc+$w*$tca; $pt[] = $yc-$h*$tsa; } $pt[] = $xc+$w*$cosea; $pt[] = $yc-$h*$sinea; $pt[] = $xc; $pt[] = $yc; $p[] = $xc+$w*$cosea; $p[] = $z+$yc-$h*$sinea; $p[] = $xc+$w*$cosea; $p[] = $yc-$h*$sinea; $p[] = $xc; $p[] = $yc; } } elseif( $sa >= 180 ) { $p = array($xc,$yc,$xc,$yc+$z,$xc+$w*$cosea,$z+$yc-$h*$sinea); $pt = array($xc,$yc,$xc+$w*$cosea,$yc-$h*$sinea); for( $a=$rea; $a>$rsa; $a -= $step ) { $tca = cos($a); $tsa = sin($a); $p[] = $xc+$w*$tca; $p[] = $z+$yc-$h*$tsa; $pt[] = $xc+$w*$tca; $pt[] = $yc-$h*$tsa; } $pt[] = $xc+$w*$cossa; $pt[] = $yc-$h*$sinsa; $pt[] = $xc; $pt[] = $yc; $p[] = $xc+$w*$cossa; $p[] = $z+$yc-$h*$sinsa; $p[] = $xc+$w*$cossa; $p[] = $yc-$h*$sinsa; $p[] = $xc; $p[] = $yc; } elseif( $sa >= 90 ) { if( $ea > 180 ) { $p = array($xc,$yc,$xc,$yc+$z,$xc+$w*$cosea,$z+$yc-$h*$sinea); $pt = array($xc,$yc,$xc+$w*$cosea,$yc-$h*$sinea); for( $a=$rea; $a > M_PI; $a -= $step ) { $tca = cos($a); $tsa = sin($a); $p[] = $xc+$w*$tca; $p[] = $z + $yc - $h*$tsa; $pt[] = $xc+$w*$tca; $pt[] = $yc-$h*$tsa; } $p[] = $xc-$w; $p[] = $z+$yc; $p[] = $xc-$w; $p[] = $yc; $p[] = $xc; $p[] = $yc; $pt[] = $xc-$w; $pt[] = $z+$yc; $pt[] = $xc-$w; $pt[] = $yc; for( $a=M_PI-$step; $a > $rsa; $a -= $step ) { $pt[] = $xc + $w*cos($a); $pt[] = $yc - $h*sin($a); } $pt[] = $xc+$w*$cossa; $pt[] = $yc-$h*$sinsa; $pt[] = $xc; $pt[] = $yc; } else { $p = array($xc,$yc,$xc,$yc+$z, $xc+$w*$cosea,$z+$yc-$h*$sinea, $xc+$w*$cosea,$yc-$h*$sinea, $xc,$yc); $pt = array($xc,$yc,$xc+$w*$cosea,$yc-$h*$sinea); for( $a=$rea; $a>$rsa; $a -= $step ) { $pt[] = $xc + $w*cos($a); $pt[] = $yc - $h*sin($a); } $pt[] = $xc+$w*$cossa; $pt[] = $yc-$h*$sinsa; $pt[] = $xc; $pt[] = $yc; } } else { $p = array($xc,$yc,$xc,$yc+$z, $xc+$w*$cossa,$z+$yc-$h*$sinsa, $xc+$w*$cossa,$yc-$h*$sinsa, $xc,$yc); $pt = array($xc,$yc,$xc+$w*$cossa,$yc-$h*$sinsa); for( $a=$rsa; $a < $rea; $a += $step ) { $pt[] = $xc + $w*cos($a); $pt[] = $yc - $h*sin($a); } $pt[] = $xc+$w*$cosea; $pt[] = $yc-$h*$sinea; $pt[] = $xc; $pt[] = $yc; } $img->PushColor($fillcolor.":".$shadow); $img->FilledPolygon($p); $img->PopColor(); $img->PushColor($fillcolor); $img->FilledPolygon($pt); $img->PopColor(); } function SetStartAngle($aStart) { if( $aStart < 0 || $aStart > 360 ) { JpGraphError::RaiseL(14004); } $this->startangle = $aStart; } function Pie3D($aaoption,&$img,$data,$colors,$xc,$yc,$d,$angle,$z, $shadow=0.65,$startangle=0,$edgecolor="",$edgeweight=1) { $h = ($angle/90.0)*$d; $sum = 0; for($i=0; $i<count($data); ++$i ) { $sum += $data[$i]; } if( $sum==0 ) return; if( $this->labeltype == 2 ) { $this->adjusted_data = $this->AdjPercentage($data); } $accsum = 0; $a = $startangle; $a = $this->NormAngle($a); $idx=0; $adjexplode=array(); $numcolors = count($colors); for($i=0; $i<count($data); ++$i, ++$idx ) { $da = $data[$i]/$sum * 360; if( empty($this->explode_radius[$i]) ) $this->explode_radius[$i]=0; $expscale=1; if( $aaoption == 1 ) $expscale=2; $la = $a + $da/2; $explode = array( $xc + $this->explode_radius[$i]*cos($la*M_PI/180)*$expscale, $yc - $this->explode_radius[$i]*sin($la*M_PI/180) * ($h/$d) *$expscale ); $adjexplode[$idx] = $explode; $labeldata[$i] = array($la,$explode[0],$explode[1]); $originalangles[$i] = array($a,$a+$da); $ne = $this->NormAngle($a+$da); if( $da <= 180 ) { $split=-1; if( ($da<=90 && ($a <= 90 && $ne > 90)) || (($da <= 180 && $da >90) && (($a < 90 || $a >= 270) && $ne > 90)) ) { $split = 90; } elseif( ($da<=90 && ($a <= 270 && $ne > 270)) || (($da<=180 && $da>90) && ($a >= 90 && $a < 270 && ($a+$da) > 270 )) ) { $split = 270; } if( $split > 0 ) { $angles[$idx] = array($a,$split); $adjcolors[$idx] = $colors[$i % $numcolors]; $adjexplode[$idx] = $explode; $angles[++$idx] = array($split,$ne); $adjcolors[$idx] = $colors[$i % $numcolors]; $adjexplode[$idx] = $explode; } else { $angles[$idx] = array($a,$ne); $adjcolors[$idx] = $colors[$i % $numcolors]; $adjexplode[$idx] = $explode; } } else { if( $a < 90 ) $split = 90; elseif( $a <= 270 ) $split = 270; else $split = 90; $angles[$idx] = array($a,$split); $adjcolors[$idx] = $colors[$i % $numcolors]; $adjexplode[$idx] = $explode; if( ($a < 90 && ($a+$da > 270)) || ($a > 90 && $a<=270 && ($a+$da>360+90) ) || ($a > 270 && $this->NormAngle($a+$da)>270) ) { $angles[++$idx] = array($split,360-$split); $adjcolors[$idx] = $colors[$i % $numcolors]; $adjexplode[$idx] = $explode; $angles[++$idx] = array(360-$split,$ne); $adjcolors[$idx] = $colors[$i % $numcolors]; $adjexplode[$idx] = $explode; } else { $angles[++$idx] = array($split,$ne); $adjcolors[$idx] = $colors[$i % $numcolors]; $adjexplode[$idx] = $explode; } } $a += $da; $a = $this->NormAngle($a); } $n = count($angles); for($i=0; $i<$n; ++$i) { list($dbgs,$dbge) = $angles[$i]; } $minval = $angles[0][0]; $min = 0; for( $i=0; $i<$n; ++$i ) { if( $angles[$i][0] < $minval ) { $minval = $angles[$i][0]; $min = $i; } } $j = $min; $cnt = 0; while( $angles[$j][1] <= 90 ) { $j++; if( $j>=$n) { $j=0; } if( $cnt > $n ) { JpGraphError::RaiseL(14005); } ++$cnt; } $start = $j; $cnt = 0; while( $angles[$j][0] < 270 && $aaoption !== 2 ) { list($x,$y) = $adjexplode[$j]; $this->Pie3DSlice($img,$x,$y,$d,$h,$angles[$j][0],$angles[$j][1], $z,$adjcolors[$j],$shadow); $last = array($x,$y,$j); $j++; if( $j >= $n ) $j=0; if( $cnt > $n ) { JpGraphError::RaiseL(14006); } ++$cnt; } $slice_left = $n-$cnt; $j=$start-1; if($j<0) $j=$n-1; $cnt = 0; while( $cnt < $slice_left && $aaoption !== 2 ) { list($x,$y) = $adjexplode[$j]; $this->Pie3DSlice($img,$x,$y,$d,$h,$angles[$j][0],$angles[$j][1], $z,$adjcolors[$j],$shadow); $j--; if( $cnt > $n ) { JpGraphError::RaiseL(14006); } if($j<0) $j=$n-1; $cnt++; } if( $aaoption !== 2 ) $this->Pie3DSlice($img,$last[0],$last[1],$d,$h,$angles[$last[2]][0], $angles[$last[2]][1],$z,$adjcolors[$last[2]],$shadow); if( $aaoption !== 1 ) { $img->SetFont($this->value->ff,$this->value->fs); $margin = $img->GetFontHeight()/2 + $this->value->margin ; for($i=0; $i < count($data); ++$i ) { $la = $labeldata[$i][0]; $x = $labeldata[$i][1] + cos($la*M_PI/180)*($d+$margin)*$this->ilabelposadj; $y = $labeldata[$i][2] - sin($la*M_PI/180)*($h+$margin)*$this->ilabelposadj; if( $this->ilabelposadj >= 1.0 ) { if( $la > 180 && $la < 360 ) $y += $z; } if( $this->labeltype == 0 ) { if( $sum > 0 ) $l = 100*$data[$i]/$sum; else $l = 0; } elseif( $this->labeltype == 1 ) { $l = $data[$i]; } else { $l = $this->adjusted_data[$i]; } if( isset($this->labels[$i]) && is_string($this->labels[$i]) ) $l=sprintf($this->labels[$i],$l); $this->StrokeLabels($l,$img,$labeldata[$i][0]*M_PI/180,$x,$y,$z); $this->AddSliceToCSIM($i,$labeldata[$i][1],$labeldata[$i][2],$h*2,$d*2,$z, $originalangles[$i][0],$originalangles[$i][1]); } } if( $edgecolor=="" || $aaoption !== 0 ) return; $accsum = 0; $a = $startangle; $a = $this->NormAngle($a); $a *= M_PI/180.0; $idx=0; $img->PushColor($edgecolor); $img->SetLineWeight($edgeweight); $fulledge = true; for($i=0; $i < count($data) && $fulledge; ++$i ) { if( empty($this->explode_radius[$i]) ) $this->explode_radius[$i]=0; if( $this->explode_radius[$i] > 0 ) { $fulledge = false; } } for($i=0; $i < count($data); ++$i, ++$idx ) { $da = $data[$i]/$sum * 2*M_PI; $this->StrokeFullSliceFrame($img,$xc,$yc,$a,$a+$da,$d,$h,$z,$edgecolor, $this->explode_radius[$i],$fulledge); $a += $da; } $img->PopColor(); } function StrokeFullSliceFrame(&$img,$xc,$yc,$sa,$ea,$w,$h,$z,$edgecolor,$exploderadius,$fulledge) { $step = 0.02; if( $exploderadius > 0 ) { $la = ($sa+$ea)/2; $xc += $exploderadius*cos($la); $yc -= $exploderadius*sin($la) * ($h/$w) ; } $p = array($xc,$yc,$xc+$w*cos($sa),$yc-$h*sin($sa)); for($a=$sa; $a < $ea; $a += $step ) { $p[] = $xc + $w*cos($a); $p[] = $yc - $h*sin($a); } $p[] = $xc+$w*cos($ea); $p[] = $yc-$h*sin($ea); $p[] = $xc; $p[] = $yc; $img->SetColor($edgecolor); $img->Polygon($p); if( $fulledge && !( $sa > 0 && $sa < M_PI && $ea < M_PI) ) { if($sa < M_PI && $ea > M_PI) $sa = M_PI; if($sa < 2*M_PI && (($ea >= 2*M_PI) || ($ea > 0 && $ea < $sa ) ) ) $ea = 2*M_PI; if( $sa >= M_PI && $ea <= 2*M_PI ) { $p = array($xc + $w*cos($sa),$yc - $h*sin($sa), $xc + $w*cos($sa),$z + $yc - $h*sin($sa)); for($a=$sa+$step; $a < $ea; $a += $step ) { $p[] = $xc + $w*cos($a); $p[] = $z + $yc - $h*sin($a); } $p[] = $xc + $w*cos($ea); $p[] = $z + $yc - $h*sin($ea); $p[] = $xc + $w*cos($ea); $p[] = $yc - $h*sin($ea); $img->SetColor($edgecolor); $img->Polygon($p); } } } function Stroke(&$img,$aaoption=0) { $n = count($this->data); if( $this->setslicecolors==null ) { $colors = array_keys($img->rgb->rgb_table); sort($colors); $idx_a=$this->themearr[$this->theme]; $ca = array(); $m = count($idx_a); for($i=0; $i < $m; ++$i) $ca[$i] = $colors[$idx_a[$i]]; $ca = array_reverse(array_slice($ca,0,$n)); } else { $ca = $this->setslicecolors; } if( $this->posx <= 1 && $this->posx > 0 ) $xc = round($this->posx*$img->width); else $xc = $this->posx ; if( $this->posy <= 1 && $this->posy > 0 ) $yc = round($this->posy*$img->height); else $yc = $this->posy ; if( $this->radius <= 1 ) { $width = floor($this->radius*min($img->width,$img->height)); $width = min($width,min($xc*0.9,($yc*90/$this->angle-$width/4)*0.9)); } else { $width = $this->radius * ($aaoption === 1 ? 2 : 1 ) ; } if( $width < 1 ) { JpGraphError::RaiseL(14007); } if( $this->iThickness ) { $thick = $this->iThickness; $thick *= ($aaoption === 1 ? 2 : 1 ); } else $thick = $width/12; $a = $this->angle; if( $a <= 30 ) $thick *= 1.6; elseif( $a <= 40 ) $thick *= 1.4; elseif( $a <= 50 ) $thick *= 1.2; elseif( $a <= 60 ) $thick *= 1.0; elseif( $a <= 70 ) $thick *= 0.8; elseif( $a <= 80 ) $thick *= 0.7; else $thick *= 0.6; $thick = floor($thick); if( $this->explode_all ) for($i=0; $i < $n; ++$i) $this->explode_radius[$i]=$this->explode_r; $this->Pie3D($aaoption,$img,$this->data, $ca, $xc, $yc, $width, $this->angle, $thick, 0.65, $this->startangle, $this->edgecolor, $this->edgeweight); if( $aaoption != 1 ) { $this->title->Pos($xc,$yc-$this->title->GetFontHeight($img)-$width/2-$this->title->margin, "center","bottom"); $this->title->Stroke($img); } } function StrokeLabels($label,&$img,$a,$xp,$yp,$z) { $this->value->halign="left"; $this->value->valign="top"; $img->SetFont($this->value->ff,$this->value->fs,$this->value->fsize); $h=$img->GetTextHeight($label); if( is_numeric($label) ) { if( $label >= 0 ) $w=$img->GetTextWidth(sprintf($this->value->format,$label)); else $w=$img->GetTextWidth(sprintf($this->value->negformat,$label)); } else $w=$img->GetTextWidth($label); while( $a > 2*M_PI ) $a -= 2*M_PI; if( $a>=7*M_PI/4 || $a <= M_PI/4 ) $dx=0; if( $a>=M_PI/4 && $a <= 3*M_PI/4 ) $dx=($a-M_PI/4)*2/M_PI; if( $a>=3*M_PI/4 && $a <= 5*M_PI/4 ) $dx=1; if( $a>=5*M_PI/4 && $a <= 7*M_PI/4 ) $dx=(1-($a-M_PI*5/4)*2/M_PI); if( $a>=7*M_PI/4 ) $dy=(($a-M_PI)-3*M_PI/4)*2/M_PI; if( $a<=M_PI/4 ) $dy=(1-$a*2/M_PI); if( $a>=M_PI/4 && $a <= 3*M_PI/4 ) $dy=1; if( $a>=3*M_PI/4 && $a <= 5*M_PI/4 ) $dy=(1-($a-3*M_PI/4)*2/M_PI); if( $a>=5*M_PI/4 && $a <= 7*M_PI/4 ) $dy=0; $x = round($xp-$dx*$w); $y = round($yp-$dy*$h); $oldmargin = $this->value->margin; $this->value->margin=0; $this->value->Stroke($img,$label,$x,$y); $this->value->margin=$oldmargin; } } ?>
